{
	"info": {
		"_postman_id": "88b0be49-e604-46ef-a4b6-768e349e6661",
		"name": "Inctagram",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "26429317-88b0be49-e604-46ef-a4b6-768e349e6661"
	},
	"item": [
		{
			"name": "Sign up",
			"item": [
				{
					"name": "Username",
					"item": [
						{
							"name": "Valid data",
							"item": [
								{
									"name": "2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"lowercaseUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = 'abcdefghijklmnopqrstuvwxyz';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 6; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "eb06928d-8583-4d0c-b937-2f5dc26c87c7"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "a90f1186-ad56-4ad8-b5d4-23aede0a0508"
											}
										}
									],
									"id": "15074e6c-9355-49fd-b645-58a30ca2044d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userName\": \"{{lowercaseUserName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"Qwerty123!\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "e6755a3c-139e-42fc-8ab2-51f4929ad000"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"allcaseUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 30; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "3bbbc0ff-b22b-4662-b880-714258abc76a"
											}
										}
									],
									"id": "1a73fdf3-3ec7-4424-8d96-09c670b4c299",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userName\": \"{{allcaseUserName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"Qwerty123!\"\r\n       }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "8e368c8e-0e5a-47e2-8287-e1ec2ee7e20f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"underscoreInUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"  let result = \"\";\r",
													"  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r",
													"  const charactersLength = characters.length;\r",
													"  let randomNumber = Math.floor(Math.random() * 25 + 6);\r",
													"  let underscoreIndex = Math.floor(Math.random() * (randomNumber + 1));\r",
													"  for (let i = 0; i < randomNumber; i++) {\r",
													"    if (i === underscoreIndex) {\r",
													"      result += \"_\";\r",
													"    }\r",
													"    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"  }\r",
													"  returnÂ result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "852ced9f-83e3-44e1-a260-9971da9a54d7"
											}
										}
									],
									"id": "ed93ca3e-85f3-4c47-8c06-e8c92ef8ca7f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userName\": \"{{underscoreInUserName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"Qwerty123!\"\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "466aab1b-2237-45a1-929d-9412a5b77d0f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"doubleUnderscoreInUserName\", generateRandomUserName());\r",
													"\r",
													"function generateRandomUserName() {\r",
													"  let result = \"\";\r",
													"  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r",
													"  const charactersLength = characters.length;\r",
													"  let randomNumber = Math.floor(Math.random() * 25 + 6);\r",
													"  let underscoreIndex = Math.floor(Math.random() * (randomNumber - 1)) + 1;\r",
													"  let underscoreIndexSecond = Math.floor(Math.random() * (randomNumber - 1)) + 1;\r",
													"\r",
													"  for (let i = 0; i < randomNumber; i++) {\r",
													"    if (i === underscoreIndex || i === underscoreIndexSecond) {\r",
													"      result += \"_\";\r",
													"    } else {\r",
													"      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"  }\r",
													"\r",
													"  return result;\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "fee19ec4-aa3f-4a21-9c4f-1e4ef4fa524d"
											}
										}
									],
									"id": "83c96f27-1b24-4bd0-8746-c47ba0dbab9a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userName\": \"{{doubleUnderscoreInUserName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"Qwerty123!\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "7",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "ae0e7da4-1f15-47ce-9161-5af5bea2d072"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"dashInUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"  let result = \"\";\r",
													"  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r",
													"  const charactersLength = characters.length;\r",
													"  let randomNumber = Math.floor(Math.random() * 25 + 6);\r",
													"  let dashIndex = Math.floor(Math.random() * (randomNumber + 1));\r",
													"  for (let i = 0; i < randomNumber; i++) {\r",
													"    if (i === dashIndex) {\r",
													"      result += \"-\";\r",
													"    }\r",
													"    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"  }\r",
													"  returnÂ result;\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "f6fd2038-15c2-4a72-a8ef-e151693d7ef9"
											}
										}
									],
									"id": "ca3d932c-7053-468e-906f-b05b66d18221",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{    \r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{dashInUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n   }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "86ad6c9b-3ee0-49ac-afb5-9fa2baaf32c5"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"doubleDashInUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"  let result = \"\";\r",
													"  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r",
													"  const charactersLength = characters.length;\r",
													"  let randomNumber = Math.floor(Math.random() * 25 + 6);\r",
													"  let dashIndex = Math.floor(Math.random() * (randomNumber - 1)) + 1;\r",
													"  let dashIndexSecond = Math.floor(Math.random() * (randomNumber - 1)) + 1;\r",
													"\r",
													"  for (let i = 0; i < randomNumber; i++) {\r",
													"    if (i === dashIndex || i === dashIndexSecond) {\r",
													"      result += \"-\";\r",
													"    } else {\r",
													"      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"  }\r",
													"  return result;\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "cd544636-4cf4-4930-a545-3c42f2dd1708"
											}
										}
									],
									"id": "f8fdf746-5006-4473-8abe-73dc8877023f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{doubleDashInUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "17",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "0a425335-c758-491c-9826-f6d19a557786"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"numberInUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = '0123456789';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 6; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "3112407c-a308-49c5-af84-56c1542cac57"
											}
										}
									],
									"id": "a8dc2b24-8337-4c91-a356-74dfb1362e70",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{numberInUserName}}\",\r\n    \"password\": \"Qwerty123!\" \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "18",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "02d85b51-24d4-4266-aea7-c784c43ab2eb"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"allValueUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = \"\";\r",
													"    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r",
													"    const numbers = '0123456789';\r",
													"    const charactersLength = characters.length;\r",
													"    const numbersLength = numbers.length;\r",
													"    let randomNumber = Math.floor(Math.random() * 25 + 6);\r",
													"    let dashIndex = Math.floor(Math.random() * (randomNumber + 1));\r",
													"    let underscoreIndex = Math.floor(Math.random() * (randomNumber + 1));\r",
													"\r",
													"    for (let i = 0; i < randomNumber; i++) {\r",
													"        if (i === dashIndex) {\r",
													"            result += \"-\";\r",
													"        } else if (i === underscoreIndex) {\r",
													"            result += '_';\r",
													"        } else if (i === randomNumber - 1) {\r",
													"            result += numbers.charAt(Math.floor(Math.random() * numbersLength)); // Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÐ¼ ÑÐ»ÑÑÐ°Ð¹Ð½ÑÑ ÑÐ¸ÑÑÑ\r",
													"        } else {\r",
													"            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"        }\r",
													"    }\r",
													"\r",
													"    return result;\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "ea74ce38-737f-40b9-9465-ca32d5f5e58c"
											}
										}
									],
									"id": "3e3767fc-cd42-4d39-92ed-9915492ed397",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{allValueUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "20",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "324283d0-4c65-43ea-93e4-455a0ef0e17d",
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ded79bc5-274c-4e90-a14b-fb9a57c71b2c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \" Avanov \",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "7fa54817-4b0e-4ec9-b41a-1b869e083f39"
						},
						{
							"name": "Invalid data",
							"item": [
								{
									"name": "9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"    pm.expect(jsonData.messages[0].message).to.eql(\"userName must be longer than or equal to 6 characters\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "79019b42-2af4-4a33-8132-b789d48b7c57"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"fiveCharactersUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 5; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "d7cffcfa-34f6-4779-a259-84fc9ae24cc0"
											}
										}
									],
									"id": "4d6f3778-9afc-435d-8882-3dc42ac3b50d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{fiveCharactersUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"    pm.expect(jsonData.messages[0].message).to.eql(\"userName must be shorter than or equal to 30 characters\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "e4be4fe6-d000-4e07-bd4e-6942885f3c81"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"allcaseUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 31; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "19e79e5b-0e52-4631-b23e-ced580724e83"
											}
										}
									],
									"id": "0d6a696f-a281-4f64-8bc1-c4247903c8d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{allcaseUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n   }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"    pm.expect(jsonData.messages[0].message).to.eql(\"userName must be longer than or equal to 6 characters\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "355d58ce-615b-4e16-9983-0e527c274aaf"
											}
										}
									],
									"id": "6dd0d956-f2bf-4847-a00b-325f395a54c2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"\",\r\n    \"password\": \"Qwerty123!\"\r\n   \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "12",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"         pm.expect(jsonData.messages[0].message).to.eql(\"userName must be longer than or equal to 6 characters\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "1d0b2101-7ab2-4013-8513-3be4ab4d9900"
											}
										}
									],
									"id": "4712440c-3066-44d6-812b-bec47e6633df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"      \",\r\n    \"password\": \"Qwerty123!\"\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "13",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"     pm.expect(jsonData.messages[0].message).to.eql(\"userName must match ^[a-zA-Z0-9_-]*$ regular expression\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "0efeac6f-9082-4936-be18-f92a5f6d27bf"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"speciaÐ¡haractersUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = '!@#$%^&\\'{}[]*?~';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 6; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "e7486629-826b-4289-af7f-3abc3fbf1887"
											}
										}
									],
									"id": "797ac4de-fcbe-43ca-a570-b46474ec9170",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{speciaÐ¡haractersUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n  \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "15",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"     pm.expect(jsonData.messages[0].message).to.eql(\"userName must match ^[a-zA-Z0-9_-]*$ regular expression\")\r",
													"\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "85ae0494-d9a6-4505-a6b9-40e4b46ffd31"
											}
										}
									],
									"id": "21198cbc-118d-44a4-aad3-aa330edd049e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{$randomEmail}}\",\r\n    \"password\": \"Qwerty123!\"\r\n   \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "16",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "678bde0b-dd75-4433-829b-a5cca2f76a9f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"cyrillicValuesUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"  let result = \"\"; \r",
													"  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"; \r",
													"  const cyrillicValues = \"Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐºÑÑÑÑÑÑÑÑÑÑ\"; \r",
													"\r",
													"  let resultLength = Math.floor(Math.random() * 25 + 6); \r",
													"  let randomNumber = Math.floor(Math.random() * resultLength + 1); \r",
													"//   console.log(resultLength, randomNumber);\r",
													"\r",
													"  for (let i = 0; i < resultLength; i++) {\r",
													"    if (i === randomNumber)\r",
													"      result += cyrillicValues.charAt(\r",
													"        Math.floor(Math.random() * cyrillicValues.length)\r",
													"      );\r",
													"    else {\r",
													"      result += characters.charAt(\r",
													"        Math.floor(Math.random() * characters.length)\r",
													"      );\r",
													"    }\r",
													"  }\r",
													"  return result;\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "3347a64b-b8b2-4c4c-b54e-5c90030072c2"
											}
										}
									],
									"id": "fe098f00-a6db-4f27-a303-e5a21e48da5c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{cyrillicValuesUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n   }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "19",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"     pm.expect(jsonData.messages[0].message).to.eql(\"userName must match ^[a-zA-Z0-9_-]*$ regular expression\")\r",
													"\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "fa514957-b427-4dff-9139-c1e3923b34f2"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"onlyCyrillicValuesUserName\", generateRandomUserName());\r",
													"function generateRandomUserName() {\r",
													"    let result = '';\r",
													"    const characters = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐºÑÑÑÑÑÑÑÑÑÑ';\r",
													"    const charactersLength = characters.length;\r",
													"    for (let i = 0; i < 6; i++) {\r",
													"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"    }\r",
													"    return result;\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "00943ffb-e62d-435a-a587-299e669f70e2"
											}
										}
									],
									"id": "1597ae46-3a8b-4ea0-9644-750caf146d6f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"{{onlyCyrillicValuesUserName}}\",\r\n    \"password\": \"Qwerty123!\"\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "e85b356b-afbc-44be-ba5a-c9c1e0547046"
						}
					],
					"id": "8c973eff-f474-4164-a391-86d785364bd5"
				},
				{
					"name": "Email",
					"item": [
						{
							"name": "Valid data",
							"item": [
								{
									"name": "22",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88813b47-15c1-4a08-9f5f-a72d31472217",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9a85f229-82ac-4526-925b-e82c01418390",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"Ð²Ð°ÑÑ@Ð²Ð°ÑÑ.ÑÑ\",\r\n    \"userName\": \"Ekaterina\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "23",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function generateRandomEmail() {\r",
													"    var chars = 'abcdefghijklmnopqrstuvwxyz';\r",
													"    var email = '';\r",
													"    for (var i = 0; i < 10; i++) {\r",
													"        email += chars.charAt(Math.floor(Math.random() * chars.length));\r",
													"    }\r",
													"    return email += '@example.com';\r",
													"}\r",
													"// Ð£ÑÑÐ°Ð½Ð¾Ð²ÐºÐ° ÑÐ³ÐµÐ½ÐµÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½Ð¾Ð³Ð¾ email-Ð°Ð´ÑÐµÑÐ° Ð² Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½ÑÑ\r",
													"pm.variables.set('randomEmail', generateRandomEmail())\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "d3158274-18d3-41a8-a2da-e9d60b51a4d3"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "6f44f723-dba2-4f63-9017-2b65285c6f14"
											}
										}
									],
									"id": "3145c960-d0aa-4b64-adfa-66cb190f2660",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"userName\": \"Ekaterina_1\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "24",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "f348823d-059e-4f6d-bc79-03dc19c0975e"
											}
										}
									],
									"id": "0e644798-54d2-4872-aaed-368974ae3fc9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"IVANOV@IVANOV.ru\",\r\n    \"userName\": \"Ekaterina_2\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "25",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "97fa24d1-6e9b-432f-8e50-6f5a3a35e422"
											}
										}
									],
									"id": "d6219df2-9d6f-4036-ac44-fc0729da5efb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@999.ru\",\r\n    \"userName\": \"Ekaterina_3\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "26",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "b7b0d2ef-84c0-4dc3-8ad1-eed9889279b4"
											}
										}
									],
									"id": "e7ad101e-90d4-40ba-b7d3-9be5006ee9c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"987@gmail.com\",\r\n    \"userName\": \"Ekaterina_4\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "27",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "84cd113d-830b-4142-b347-1d11c4944d0e"
											}
										}
									],
									"id": "55c8d41c-1e93-49b7-8f3d-2e92303ec07f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov-petrov@gmail.com\",\r\n    \"userName\": \"Ekaterina_5\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "28",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "d39885b8-c6d2-4b8a-b0c6-bb641da078d9"
											}
										}
									],
									"id": "6ec7f231-dd7e-4fb7-af14-3fdfcfcecba0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@ivanov-petroi.com\",\r\n    \"userName\": \"Ekaterina_6\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "30",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "c6bbe0f2-f6b5-4e40-8381-063a801389d1"
											}
										}
									],
									"id": "36c0bcaa-2c03-4516-94ba-40e17dcb58b4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov_petrov@kozlov.com\",\r\n    \"userName\": \"Ekaterina231\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "31",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "1661b5ca-a91c-4211-a11f-0893eee3ce7d"
											}
										}
									],
									"id": "1f1e56d7-bbb7-4aca-a358-cac28daee611",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov.petrov@kozlov.com\",\r\n    \"userName\": \"Ekaterina_8\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "32",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "d21c76d5-7ccd-4f2a-9e23-af84ca8ea681"
											}
										}
									],
									"id": "daf7b1f4-f2f1-458d-93c8-6c489928f4bb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov.petrov@kozlov.ru\",\r\n    \"userName\": \"Ekaterina_9\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "71",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "ded96e64-1bdf-4551-b1a3-f630004a6328"
											}
										}
									],
									"id": "9c404497-2865-40cf-8447-b63d08a05da1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"  vasya@vasya.ru  \",\r\n    \"userName\": \"Vasya_020\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "364fc79a-1dab-4852-a723-6e8aa9a8219e"
						},
						{
							"name": "Invalid data",
							"item": [
								{
									"name": "29",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4195a04c-4697-44a8-aa80-1934b77c1a17",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8d9b2add-f8a4-4274-b0fb-afd71ffef99d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@i_kozlov.com\",\r\n    \"userName\": \"Ekaterina_11\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "34",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "be742222-c7bd-4aba-a013-442fae946c33"
											}
										}
									],
									"id": "b5683f53-7b0d-4253-b140-84a8f7941a77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\",\r\n    \"userName\": \"Ekaterina_13\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "35",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "4147d809-b1c3-4ab8-be64-5829df3c69a0"
											}
										}
									],
									"id": "97ff47af-9baf-4e62-88c5-b21e279d2a7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@gmailcom\",\r\n    \"userName\": \"Ekaterina_14\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "36",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "471c21ef-47f5-4f50-964c-d8fddf1c2d20"
											}
										}
									],
									"id": "f5ff2ba1-73e0-498a-861f-0bcb6d5bde3c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@\",\r\n    \"userName\": \"Ekaterina_15\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "37",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "b8a270ea-883c-4ba4-b240-5588df76310f"
											}
										}
									],
									"id": "41c91d9a-9c9e-43c4-ae45-56122f7a4620",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov\",\r\n    \"userName\": \"Ekaterina_16\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "38",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "a30b6496-3142-4ad8-a0f6-79653c30bcf7"
											}
										}
									],
									"id": "ffee88a9-c169-40fe-9aa1-67c0c12b92dc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov petrov@gmail.com\",\r\n    \"userName\": \"Ekaterina_17\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "39",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "cfd22f90-e35f-4af0-93e1-29672d53bdc1"
											}
										}
									],
									"id": "b1819324-b72d-4ea9-8ccd-7886bc5f76d4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov-petrov@gmail gmail.com\",\r\n    \"userName\": \"Ekaterina_18\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "40",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "886cd059-cd5c-4a44-83d6-0fb088826e91"
											}
										}
									],
									"id": "42728896-51eb-49bd-b9ec-b152abefa608",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"@gmail.com\",\r\n    \"userName\": \"Ekaterina_19\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "179f874e-e315-4088-869d-635ebed4891f"
											}
										}
									],
									"id": "7d3b0347-3631-45a1-8e24-f3738bf8efbc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"                \",\r\n    \"userName\": \"Ekaterina_20\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "65810fcb-40e6-48db-afe6-8ee01f99a642"
											}
										}
									],
									"id": "e3479f22-d01e-4684-a52d-a78bcb91467f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov@yandex.r\",\r\n    \"userName\": \"Ekaterina_21\",\r\n    \"password\": \"Qwerty123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "436c83c9-ff2b-4cd8-838b-0a4f63afad0d"
						}
					],
					"id": "c2f1376f-1b20-4a41-8400-741074c20754"
				},
				{
					"name": "Password",
					"item": [
						{
							"name": "Valid data",
							"item": [
								{
									"name": "45",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "edef2d4f-0167-4146-9321-56ec20ce28b6"
											}
										}
									],
									"id": "1da5ad15-fae6-4e51-8472-4cf5e3605372",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_23\",\r\n    \"password\": \"Qw123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "46",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "4b1c62f5-86d7-4141-9feb-d98794e17776"
											}
										}
									],
									"id": "34e29d03-1f77-4087-ba26-e5756f962834",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_24\",\r\n    \"password\": \"SidorchenkoAndrei12!\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "70",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "58795ea1-d2ef-4984-89cf-0a98c96e3a44"
											}
										}
									],
									"id": "d6d47924-1db2-40f2-8e25-859d5b132a2d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_042\",\r\n    \"password\": \" Qwert123! \"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "0aaa87f0-52fe-4110-9750-c6678dfece41"
						},
						{
							"name": "Invalid data",
							"item": [
								{
									"name": "47",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "31f3e894-7200-4c6a-8661-2cf2e590ceee"
											}
										}
									],
									"id": "e1451adb-59c1-4a1e-95b7-874a76a36ab1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_25\",\r\n    \"password\": \"123987\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "48",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "65e930f7-6edd-4dfb-8d5a-a6e2d53d1de1"
											}
										}
									],
									"id": "ebcedcf4-b4be-45ae-ab32-c71c671a7c32",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_26\",\r\n    \"password\": \"1239$&\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "49",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "adf814d0-b275-4b88-935f-2ed2862035f7"
											}
										}
									],
									"id": "0b10deca-2030-439f-965f-42f8295d2a0c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_27\",\r\n    \"password\": \"Qwer$&\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "50",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "06fabe2e-97a7-4596-9a20-e392e1654de3"
											}
										}
									],
									"id": "1e888af6-55db-40f5-b8dd-e74f73408944",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_28\",\r\n    \"password\": \"Qwer1234567898765432\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "567ed0a7-8583-48e2-9ec9-f3cc11d74853"
											}
										}
									],
									"id": "1d9a68f5-5a2a-48a1-a5d3-ddb4fff22ed1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_29\",\r\n    \"password\": \"Qwerty\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "039f9048-f3b4-41ab-96e5-03c07b22907b"
											}
										}
									],
									"id": "396caec7-58bd-43cd-8741-be9468936620",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_30\",\r\n    \"password\": \"ÐÐ²ÐµÑÑÐ¸\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "53",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "e5ed2940-7900-4e75-8968-1b54a2c59b97"
											}
										}
									],
									"id": "7ab8f569-ab48-4e89-9618-e38a683ae038",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_31\",\r\n    \"password\": \"And2!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "54",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "fac1d47c-ebf9-414d-ae3d-a4f4ef38fe4b"
											}
										}
									],
									"id": "5aeb6452-2b30-4455-98e1-3ba1bdd9a488",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_32\",\r\n    \"password\": \"SidorchenkoAndrei12!=\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "55",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "a3e39cbd-25dd-4f2d-ab89-d4a3e5801767"
											}
										}
									],
									"id": "eeb6f760-533a-4f7d-8389-db366fcee5be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_33\",\r\n    \"password\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "56",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "6cb3b56f-6125-4010-929a-228d3d7ed679"
											}
										}
									],
									"id": "801bd6d6-65cd-4942-b60f-18a65d2d047a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_34\",\r\n    \"password\": \"      \"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "57",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript",
												"id": "a700465e-0526-40eb-8dbd-8e17bb16026a"
											}
										}
									],
									"id": "e046f1b8-4adc-402f-bd89-a003ff892912",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_109\",\r\n    \"password\": \"Aleka ndro12! &()GrA\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "27b85d79-1c85-4b54-9d35-3eb37519089d"
						}
					],
					"id": "cf3f5734-928f-453b-a6ab-593fe9513b4a"
				},
				{
					"name": "Password confirmation",
					"item": [
						{
							"name": "Valid data",
							"item": [
								{
									"name": "62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "6397070f-b5b8-4a4a-af9e-85dffb46dc71"
											}
										}
									],
									"id": "79003db0-a910-4205-8f9c-c2ca8d2cd72f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_45\",\r\n    \"password\": \"Password123!\",\r\n    \"passwordConfirmation\": \"Password123!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "b4746187-7a46-424d-bbb6-8ece2fbb990e"
						},
						{
							"name": "Invalid data",
							"item": [
								{
									"name": "60",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "9cd59bcf-18d3-4907-a84f-386a01421fcc"
											}
										}
									],
									"id": "b209b968-fae4-4022-9deb-38a0972c007e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"userName\": \"Ekaterina_43\",\r\n    \"password\": \"Password123!\",\r\n    \"passwordConfirmation\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"id": "db828cd0-6f53-4eb6-b557-c4721cd29795"
											}
										}
									],
									"id": "bf4c9b76-eca0-4639-851b-82e3202a72d8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivanov1023@yandex.ru\",\r\n    \"userName\": \"Ekaterina_440\",\r\n    \"password\": \"Password123!\",\r\n    \"passwordConfirmation\": \"hgfdse1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"id": "4b36a079-c2ce-4c3a-a9f0-810a5056130f"
						}
					],
					"id": "e3626872-8283-4746-9fd9-5cc85f41adc1"
				},
				{
					"name": "US",
					"item": [
						{
							"name": "registration(tc-1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"id": "6124d9e8-5d4d-4c2b-bcee-cdbdbd700172"
									}
								}
							],
							"id": "979283f6-7926-4b90-a42a-8dbe8ee0f12a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\",\r\n    \"userName\": \"test001\",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qqwerty123!\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration"
									]
								}
							},
							"response": []
						},
						{
							"name": "registration-confirmation_with_email/tc8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "ab521157-2c58-422b-ba59-a44486c59a70"
									}
								}
							],
							"id": "4dcdb522-85b8-481c-86e3-fb3a3676d8c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationCode\": \"a89913b6-6840-47dd-9d9e-1947344e8cc3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration-confirmation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration-confirmation"
									]
								}
							},
							"response": []
						},
						{
							"name": "unvalid code registration-confirmation_with_email/tc8 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"id": "1676a194-ac95-4909-8319-89a5a50625d9"
									}
								}
							],
							"id": "41a93600-5dbd-45e4-ba8f-f9cbf3980435",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationCode\": \"7604082a-c1b1-44fd-b5d2-9b68559a471b\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration-confirmation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration-confirmation"
									]
								}
							},
							"response": []
						},
						{
							"name": "registration(tc-3)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Bad request\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.error).to.eql(\"BAD_REQUEST\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "0f0e7795-6c18-4661-91e5-fed4c791aedc"
									}
								}
							],
							"id": "9cad8c60-54d4-491b-abc7-6d126f6c6c44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\",\r\n    \"userName\": \"test002\",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qqwerty123!\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration"
									]
								}
							},
							"response": []
						},
						{
							"name": "registration(tc-4)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Bad request\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.error).to.eql(\"BAD_REQUEST\")\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"User with this userName is already exist\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f7a4ea78-2fb2-4435-9b43-df471a973655"
									}
								}
							],
							"id": "46c0263f-d808-4079-b26d-1dcd2f5f2e77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test002@eicb.ru\",\r\n    \"userName\": \"test001\",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qqwerty123!\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration"
									]
								}
							},
							"response": []
						},
						{
							"name": "registration(tc-5)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "662329a6-684d-4336-8b9c-85395cf8a60b"
									}
								}
							],
							"id": "ba7b3254-7f04-4d75-b4a7-987670ddedf9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\",\r\n    \"userName\": \"test001\",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qqwerty123!\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration"
									]
								}
							},
							"response": []
						},
						{
							"name": "(ÑÑ-6)registration-email-resending",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "743ad636-4a29-4d54-9d75-8bfb3936f112"
									}
								}
							],
							"id": "72cbde04-147f-4201-989d-d350ced08949",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test003@eicb.ru\",\r\n    \"baseUrl\": \"{{baseUrl}}\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration-email-resending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration-email-resending"
									]
								}
							},
							"response": []
						},
						{
							"name": "(ÑÑ-6)unvalid email registration-email-resending Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Bad request\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.error).to.eql(\"BAD_REQUEST\")\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Email isn't valid or already confirmed\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "7e0bcc6d-29a4-4f25-9c2a-b5506ad451fb"
									}
								}
							],
							"id": "ededbd78-9cb4-4688-b7e1-12fb10281b2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vasy@eicb.ru\",\r\n    \"baseUrl\": \"{{baseUrl}}\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration-email-resending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration-email-resending"
									]
								}
							},
							"response": []
						},
						{
							"name": "(ÑÑ-7)registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"id": "e170f87b-382c-47ef-990a-ff813dd2a21a"
									}
								}
							],
							"id": "04db07eb-4701-4c2a-b45f-a6d736e5ce2a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vasya@eicb.ru\",\r\n    \"userName\": \"vasyaa\",\r\n    \"password\": \"Qwerty123!\",\r\n    \"passwordConfirmation\": \"Qqwerty123!\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"registration"
									]
								}
							},
							"response": []
						}
					],
					"id": "7aba6545-25e0-4008-9792-79810e5f607b"
				}
			],
			"id": "c8aa2202-e3a6-4d26-bb2a-2e5ab75677b0"
		},
		{
			"name": "Sign in",
			"item": [
				{
					"name": "Valid data",
					"item": [
						{
							"name": "Demo-15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"accessToken come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accessToken).to.not.be.undefined;\r",
											"    pm.expect(jsonData.accessToken).to.not.be.null\r",
											"});"
										],
										"type": "text/javascript",
										"id": "8baf3766-f4cc-45c3-a9c7-9a97081780b7"
									}
								}
							],
							"id": "4d3caba4-2e4a-47be-b7b7-eb23803c317a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"id": "5f032fd6-180c-4468-977e-58abf19c2800"
				},
				{
					"name": "Invalid data",
					"item": [
						{
							"name": "Demo-16",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages).to.eq(\"invalid password or email\");\r",
											"    pm.expect(jsonData.messages).to.not.be.null\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "68666d09-5443-4c44-9d0d-a756061f95b4"
									}
								}
							],
							"id": "35f227c0-183e-49fa-9f49-1bc6afef48b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001+1@eicb.ru\", \r\n\"password\": \"Qwerty123$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demo-17",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages).to.eq(\"invalid password or email\");\r",
											"    pm.expect(jsonData.messages).to.not.be.null\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "7bb08761-06e4-4dd4-9a5a-52e1d835834e"
									}
								}
							],
							"id": "65b4d20d-53e4-48a6-ae35-3f934db8da39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demo-18",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e5d1835-3931-4445-b95d-668232ba5eba",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages).to.not.be.null\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3d96da03-e4f2-4ac3-8d3b-e239dd4a5d22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vasya@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demo-19",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"error come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.eq(\"Bad Request\");\r",
											"   });\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "286fd163-f89d-4492-a226-01902fb56c34"
									}
								}
							],
							"id": "8631dadf-cb16-47ac-808b-856b6a7e7835",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\", \r\n\"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demo-20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages).to.eq(\"invalid password or email\");\r",
											"   });\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "2d32504e-77e3-4419-8e37-d22f16c512fc"
									}
								}
							],
							"id": "ecb1a8c6-6620-4f28-953f-84e7bdec7cc9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Ð²Ð°ÑÑ@Ð²Ð°ÑÑ.ÑÑ\", \r\n\"password\": \"Qwerty123!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"id": "4a16cd9c-2203-47e3-a365-3af934c04279"
				}
			],
			"id": "de49add5-f897-4d14-b0fb-28d6f0d24c8b"
		},
		{
			"name": "US",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"accessToken come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.accessToken).to.not.be.undefined;\r",
									"    pm.expect(jsonData.accessToken).to.not.be.null\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);\r",
									""
								],
								"type": "text/javascript",
								"id": "bde73eec-0e3e-4be3-a2ab-cd38384ddb75"
							}
						}
					],
					"id": "3c38c7ef-a3b6-4468-8481-771301ebf68a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userName).to.be.not.null;\r",
									"});\r",
									"const response = pm.response.json()\r",
									"pm.globals.set(\"userId\", response.userId)"
								],
								"type": "text/javascript",
								"id": "7116abc0-7453-48f4-92c6-f634d544dbc0"
							}
						}
					],
					"id": "b1fdb319-65d9-4fcc-a742-e5acff14140b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "/public-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.totalCount).to.be.not.null\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "43db44d8-4eac-4f61-8f98-23d3dcc6b958"
							}
						}
					],
					"id": "59fc0751-efa4-4c64-ac58-8fe6d824dab8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "public-user/profile unvalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"BAD_REQUEST\")\r",
									"})"
								],
								"type": "text/javascript",
								"id": "38fc2190-e880-4cb4-8ddf-5a26b75272be"
							}
						}
					],
					"id": "608fde5a-06ce-4e05-94c3-d756b366ca05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public-user/profile/123456789",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-user",
								"profile",
								"123456789"
							]
						}
					},
					"response": []
				},
				{
					"name": "public-user/profile/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userName).to.eql(\"test001\")\r",
									"})"
								],
								"type": "text/javascript",
								"id": "cd5992c8-6c25-4486-ab28-97807e38dd0b"
							}
						}
					],
					"id": "9fd282b5-2289-46f7-a464-77687283c375",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public-user/profile/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-user",
								"profile",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "80a36829-90f4-4c2a-a931-01066beaefc1"
		},
		{
			"name": "Forgot Password",
			"item": [
				{
					"name": "valid createNewPassword(Demo-74)",
					"item": [
						{
							"name": "step14_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "43ad720c-efcf-45e1-ab94-a21481941bdf"
									}
								}
							],
							"id": "c736c98d-c1fa-4d00-af6c-254427ce1fd7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"\",\r\n\"recoveryCode\": \"5f681e10-f3f5-4724-a7ab-bd21c90ab9e2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step4_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "ee1233c3-6470-4aa3-86de-3bd4b9b15770"
									}
								}
							],
							"id": "dbaee9f9-f5c6-4bc1-a6a8-661c368b10e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"!.#$%&\",\r\n\"recoveryCode\": \"cf982cf6-7aef-4407-919f-0a7b6e307a2a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step5_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "d0e3dd2d-2e69-4e55-b1e1-1358c7619866"
									}
								}
							],
							"id": "248576eb-12c0-4a2b-9641-994957ded0f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"ÐÐ°ÑÐ¾Ð»Ñ\",\r\n\"recoveryCode\": \"a578d97d-39d2-4a0c-8c44-186414c84fa9\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step7_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "4f735847-b549-42cb-a883-8a1c687f2e0b"
									}
								}
							],
							"id": "3e0710c1-700a-4e97-bb20-3c8114f08b40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty123!\",\r\n\"recoveryCode\": \"a578d97d-39d2-4a0c-8c44-186414c84fa9\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step8_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "9b73f72b-ff90-42cf-9b22-6a8dcb948c23"
									}
								}
							],
							"id": "b7bb51cd-6f4e-44e0-8d74-e2739cf1772b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty123!Qwerty123!\",\r\n\"recoveryCode\": \"133b6911-474a-4b21-9106-34a1fea8fae1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step9_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "616365ec-a356-4b46-a1cb-8c69aa2471e3"
									}
								}
							],
							"id": "07331794-359c-456b-8037-e2f456c9bb8d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty!\",\r\n\"recoveryCode\": \"1ea5b008-02fe-4f1d-9d72-73e2b7912fb4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step10_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "0f8f868c-ff3c-4d1c-98b5-97cfcfdf18f5"
									}
								}
							],
							"id": "2747cd77-54f0-4784-b3e8-13d371fa757b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty1234Qwerty1234\",\r\n\"recoveryCode\": \"aa5dc83e-0e9b-48c6-b4d8-d1cc0d5186af\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step11_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "7056321a-0406-4f60-8f84-c25f3650f096"
									}
								}
							],
							"id": "290bf637-5232-45ac-b7ba-4c7c3edfc773",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty\",\r\n\"recoveryCode\": \"63c0319f-62e4-4294-a99c-c87fe93b91a1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step12_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"newPassword must be longer than or equal to 6 characters\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "df14acdf-6266-43c7-aebd-ab19ea5cf63b"
									}
								}
							],
							"id": "333ee8f0-e719-45c9-a622-876ffb3568d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwe1!\",\r\n\"recoveryCode\": \"1784d0d0-8c44-46d0-9723-6fd959731f05\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step13_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "3d2e45fc-29df-4d93-abe6-f9b900f92b5e"
									}
								}
							],
							"id": "3f8c207e-0094-4afb-a0bf-01336a92d55b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"Qwerty123!Qwerty123!!\",\r\n\"recoveryCode\": \"4157d9b0-a2ef-499a-96cd-ba9c3fe0ff4c\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step15_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "f0083609-1eea-44f8-97ab-16cffaa9ec98"
									}
								}
							],
							"id": "8ec2935c-0e0d-490b-ba3a-7313ccaa1085",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"      \",\r\n\"recoveryCode\": \"dab20104-6b43-4be7-8ea5-4fa5e3caa58a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "step16_Demo74",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"messages come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.messages[0].message).to.eql(\"Password must contain only Latin letters, numbers, and special characters.\");\r",
											"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"id": "90278a23-b0fd-40d4-a276-b8e2208f69d8"
									}
								}
							],
							"id": "025e306a-42c8-4ff9-af53-173e48dc353f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"newPassword\": \"    \",\r\n\"recoveryCode\": \"dab20104-6b43-4be7-8ea5-4fa5e3caa58a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/new-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"new-password"
									]
								}
							},
							"response": []
						}
					],
					"id": "da575064-0bc9-4856-91df-f51641314a68"
				},
				{
					"name": "Demo-71 (validFieldEmail)",
					"item": [
						{
							"name": "validEmail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f273f16d-2289-4c10-ac6e-6e58612c4d96"
									}
								}
							],
							"id": "e93ba809-3b3f-41b9-aec0-68ced675e257",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"recaptcha\": \"string\"\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/password-recovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"password-recovery"
									]
								}
							},
							"response": []
						},
						{
							"name": "inValidEmail",
							"id": "a4df8eae-84c0-4f76-b3b5-6a7580843bf2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test001@eicb.ru\",\r\n  \"recaptcha\": \"string\",\r\n  \"baseUrl\": \"http://localhost:3000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/password-recovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"password-recovery"
									]
								}
							},
							"response": []
						},
						{
							"name": "step-22(Demo-71)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "14aa765f-054b-4655-9d21-ae2ca8c7a471"
									}
								}
							],
							"id": "0938b396-0cbe-4130-bf34-40642007c155",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/password-recovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"password-recovery"
									]
								}
							},
							"response": []
						}
					],
					"id": "61cf85a4-069e-442d-abfd-c8ab37ee5964"
				},
				{
					"name": "invalid recoveryCodeCreateNewPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"messages come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.messages[0].message).to.eql(\"Password recovery code is invalid\");\r",
									"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "65e6eabd-f61c-4156-8a4b-478ae8e5c462"
							}
						}
					],
					"id": "17bb46d4-4b2c-4ca9-870d-a84f5f9d6195",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"newPassword\": \"Qwerty123!\",\r\n\"recoveryCode\": \"f3ed2d6b-8c65-4e6e-ad59-ce5b40b3da40\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/new-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"new-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Demo-70",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"messages come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.messages[0].message).to.eql(\"Recaptcha is not valid\");\r",
									"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bab31b83-cc03-45c4-af2c-5979006c80ea"
							}
						}
					],
					"id": "83d9dabf-9e1d-4fff-ae89-89c2367ff89f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test001@eicb.ru\",\r\n  \"recaptcha\": \"123\",\r\n  \"baseUrl\": \"http://localhost:3000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/password-recovery",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"password-recovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Demo-73",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "440a3050-75d1-4545-aca3-07e1ce00ed79"
							}
						}
					],
					"id": "f90fec61-72ef-49e7-ad4e-26b278afb163",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"{{$randomEmail}}\",\r\n\"recaptcha\": \"string\",\r\n  \"baseUrl\": \"http://localhost:3000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/password-recovery",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"password-recovery"
							]
						}
					},
					"response": []
				}
			],
			"id": "bca7201e-779e-4966-a711-3c395edf4d69"
		},
		{
			"name": "US-LogOut",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"accessToken come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.accessToken).to.not.be.undefined;\r",
									"    pm.expect(jsonData.accessToken).to.not.be.null\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);"
								],
								"type": "text/javascript",
								"id": "8dfbe577-3562-4dec-a52f-3f77806e1a68"
							}
						}
					],
					"id": "c4615d28-85b9-4d16-984f-b6b799660808",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logOut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "cf9bd023-f9f9-4bee-8da5-76a1c2e1177c"
							}
						}
					],
					"id": "057b4fcf-b1d6-402c-b549-b4d8206d9561",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "logOut when logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"messages come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.messages[0].message).to.eql(\"Authorization error\");\r",
									"    pm.expect(jsonData.messages[0].message).to.not.be.null;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "b5eafd3e-9719-405a-9aa5-b50dff0120f3"
							}
						}
					],
					"id": "c1f225e5-e1eb-4045-b291-8386281f37a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"id": "582dc63e-ec80-48af-a2ef-d7b6d5e66b38"
		},
		{
			"name": "Profile settings",
			"item": [
				{
					"name": "Demo-143",
					"item": [
						{
							"name": "(DEMO-110)change required date user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"id": "684d15b8-38da-433e-b086-9a04445669b5"
									}
								}
							],
							"id": "9fa2d477-ec6d-4588-923f-44b68cac25a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userName\": \"LeoGro\",\r\n  \"firstName\": \"test\",\r\n  \"lastName\": \"test\",\r\n  \"city\": \"\",\r\n  \"dateOfBirth\": null,\r\n  \"aboutMe\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "auth me Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"chacking text response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.userName).to.be.not.null;\r",
											"});\r",
											"const response = pm.response.json()\r",
											"pm.globals.set(\"userId\", response.userId)"
										],
										"type": "text/javascript",
										"id": "4f729908-00fc-4181-95a9-a6eb3eac8143"
									}
								}
							],
							"id": "8d329e57-948f-43bc-894a-864a37baa88a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"me"
									]
								}
							},
							"response": []
						}
					],
					"id": "d9afddfc-33b2-4731-b844-ade003e8e019"
				},
				{
					"name": "input fields",
					"item": [
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"accessToken come in response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accessToken).to.not.be.undefined;\r",
											"    pm.expect(jsonData.accessToken).to.not.be.null\r",
											"});\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);"
										],
										"type": "text/javascript",
										"id": "4c6b69f5-27b7-493e-8de3-82cabd59299b"
									}
								}
							],
							"id": "0b019785-6d18-428b-bcb7-3e7e909a3972",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"id": "be39aa2e-d4a6-402f-a2db-4fb5903f5a92"
									}
								}
							],
							"id": "97febd97-4b22-4a39-bcb5-d01c3b85e846",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"city\": \"{{city}}\",\r\n  \"dateOfBirth\": \"{{dateOfBirth}}\",\r\n  \"aboutMe\": \"{{aboutMe}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "UnValid value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"id": "35876727-031b-49c5-bfa3-9e739ab240b0"
									}
								}
							],
							"id": "a5232126-560e-48b5-af95-dad22699266d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"city\": \"{{city}}\",\r\n  \"dateOfBirth\": \"{{dateOfBirth}}\",\r\n  \"aboutMe\": \"{{aboutMe}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"profile"
									]
								}
							},
							"response": []
						}
					],
					"id": "303dc096-e1c9-4185-86b3-0d7d446762e3"
				},
				{
					"name": "DEMO-147 date user unlogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Unauthorized\")\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "487239af-e745-4115-9aca-cd55c780405a"
							}
						}
					],
					"id": "56a2f529-e34b-4a66-9863-a7d15ff25b90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"accessToken come in response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.accessToken).to.not.be.undefined;\r",
									"    pm.expect(jsonData.accessToken).to.not.be.null\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);"
								],
								"type": "text/javascript",
								"id": "a000f747-19c5-4d30-a686-cb8291b97c2d"
							}
						}
					],
					"id": "739f94f3-bc55-4627-88f8-8ec7e618dd26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test001@eicb.ru\", \r\n\"password\": \"Qwerty123!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get date user (Demo-98)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"chacking text response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.userName).to.not.be.undefined;\r",
									"    pm.expect(jsonData.userName).to.not.be.null;\r",
									"});\r",
									"const response = pm.response.json()\r",
									"pm.globals.set(\"userName\", response.userName)"
								],
								"type": "text/javascript",
								"id": "70a67a5a-e930-43f5-9cc2-0a3d4c5edc17"
							}
						}
					],
					"id": "374e176e-b90f-401c-badb-131b776b088e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-106)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "43cd152d-1e54-4589-9649-9721053d8f57"
							}
						}
					],
					"id": "196e48b2-5423-4514-a34c-fcfeea9852dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"LeoGro\",\r\n  \"lastName\": \"LeoGro\",\r\n  \"city\": \"\",\r\n  \"dateOfBirth\": \"\",\r\n  \"aboutMe\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-107)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "85d4c331-9a15-4701-8e56-5188db2e08b7"
							}
						}
					],
					"id": "921ae3bd-36ac-4aae-8f50-8bd025ce762e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"LeoGro\",\r\n  \"lastName\": \"Leo\",\r\n  \"city\": \"Moscow\",\r\n  \"dateOfBirth\": \"1983-03-03T00:00:00Z\",\r\n  \"aboutMe\": \"LeoGro\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO109)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "0420436c-2176-4d44-a7d2-caebd354f205"
							}
						}
					],
					"id": "02901a32-30e1-4ce5-bada-d10dbd1d34e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"city\": \"Moscow\",\r\n  \"dateOfBirth\": \"1983-03-03T00:00:00Z\",\r\n  \"aboutMe\": \"LeoGro\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO141)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "6e424ffe-9253-4cb5-8eee-8bc5b3a69f27"
							}
						}
					],
					"id": "b3bfc1ba-ec60-45a1-8da5-56e2babc14d8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"LeoGro\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"city\": \"\",\r\n  \"dateOfBirth\": null,\r\n  \"aboutMe\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO140)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "9c8173f8-9f48-4464-8270-d26adcc017f7"
							}
						}
					],
					"id": "d5e770a8-a386-4e6b-a16a-f0938608c882",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"city\": \"London\",\r\n  \"dateOfBirth\": \"2004-02-21T00:00:00Z\",\r\n  \"aboutMe\": \"about me\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-142)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"var jsonDate = pm.response.json();\r",
									"pm.expect(jsonDate.messages[0].message).to.eql(\"userName must be longer than or equal to 6 characters\")\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "973fc76a-6e55-4683-9840-965f80fab02b"
							}
						}
					],
					"id": "2a1c152c-1881-41d5-aeca-6379e7766872",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"city\": \"\",\r\n  \"dateOfBirth\": null,\r\n  \"aboutMe\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-110)change required date user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "bf5199c8-057e-41fe-9124-bf6a0f15f053"
							}
						}
					],
					"id": "4eeb8db3-efbf-4ce4-8e3c-7c1b68262b48",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"test001\",\r\n  \"firstName\": \"test001\",\r\n  \"lastName\": \"test002\",\r\n  \"city\": \"London\",\r\n  \"dateOfBirth\": null,\r\n  \"aboutMe\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-124)add photo less 10Mb png",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"content of response\", function () {\r",
									"var jsonData = pm.response.json();\r",
									"pm.expect(jsonData.avatars[0].url).to.be.not.null;\r",
									"pm.expect(jsonData.avatars[0].width.height).to.be.not.null;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "f088847a-666a-4632-959d-97b9d1a60624"
							}
						}
					],
					"id": "f677b3ff-fdf5-47de-acdd-87421673a61e",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eed0ef2-d681-40e0-a997-ebbd8ffbf798"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-129)add photo less 10Mb JPEG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"content of response\", function () {\r",
									"var jsonData = pm.response.json();\r",
									"pm.expect(jsonData.avatars[0].url).to.be.not.null;\r",
									"pm.expect(jsonData.avatars[0].width.height).to.be.not.null;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "b9adb1e6-e80d-4de1-9859-7d3d1ee1c58e"
							}
						}
					],
					"id": "8981a3ca-2edc-4556-addd-c5fecbff2eed",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eed0f61-2513-4c30-a75b-5106a236ceed"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-132)add GIF less 10 Mb",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"messages come in response\", function () {\r",
									"var jsonData = pm.response.json();\r",
									"pm.expect(jsonData.messages[0].message).to.eql(\"The file format is incorrect, please upload the correct file\");\r",
									"pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "2d554caf-ae55-4781-86d4-3cd4636ed687"
							}
						}
					],
					"id": "fd2aeed0-7958-4dba-9bb4-44d660be24dd",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eed0f40-77bd-4e20-aa58-c1907f79563a"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-133)add WebP less 10 Mb Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"messages come in response\", function () {\r",
									"var jsonData = pm.response.json();\r",
									"pm.expect(jsonData.messages[0].message).to.eql(\"The file format is incorrect, please upload the correct file\");\r",
									"pm.expect(jsonData.error).to.eql(\"Bad Request\")\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "328791dd-b916-4017-bae3-b6c860889a81"
							}
						}
					],
					"id": "c93e05e0-9f44-4ca7-9c05-5f8ae73fba88",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eed0f71-7262-4760-9f0e-aa5f42a3b8ad"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DEMO-137)delete avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "e9ea04c9-fb3a-49db-9dc7-1c2466ce3b62"
							}
						}
					],
					"id": "496d49fa-2c38-4409-ae10-8aee0d2c8005",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/users/profile/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile",
								"avatar"
							]
						}
					},
					"response": []
				}
			],
			"id": "d19aa506-9cd5-4a53-870a-6c678a310ae5"
		}
	],
	"variable": [
		{
			"id": "539fd323-048d-4fad-93f2-444a02b1c78b",
			"key": "baseUrl",
			"value": "https://inctagram.work/api/v1"
		}
	]
}